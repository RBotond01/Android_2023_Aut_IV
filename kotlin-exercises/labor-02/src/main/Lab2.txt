// ListDictionary class implementing IDictionary
class ListDictionary : IDictionary {
    private val wordList = mutableListOf<String>()

    init {
        // Read words from a text file and add them to the list
        File("dictionary_words.txt").useLines { lines ->
            wordList.addAll(lines)
        }
    }

    override fun addWord(word: String) {
        wordList.add(word)
    }

    override fun find(word: String): String {
        return if (wordList.contains(word)) {
            "Word found in the dictionary!"
        } else {
            "Word not found in the dictionary."
        }
    }

    override fun size(): Int {
        return wordList.size
    }
}

// TreeSetDictionary class implementing IDictionary
class TreeSetDictionary : IDictionary {
    private val wordSet = TreeSet<String>()

    init {
        // Read words from a text file and add them to the set
        File("dictionary_words.txt").useLines { lines ->
            wordSet.addAll(lines)
        }
    }

    override fun addWord(word: String) {
        wordSet.add(word)
    }

    override fun find(word: String): String {
        return if (wordSet.contains(word)) {
            "Word found in the dictionary!"
        } else {
            "Word not found in the dictionary."
        }
    }

    override fun size(): Int {
        return wordSet.size
    }
}

// HashSetDictionary class implementing IDictionary
class HashSetDictionary : IDictionary {
    private val wordSet = HashSet<String>()

    init {
        // Read words from a text file and add them to the set
        File("dictionary_words.txt").useLines { lines ->
            wordSet.addAll(lines)
        }
    }

    override fun addWord(word: String) {
        wordSet.add(word)
    }

    override fun find(word: String): String {
        return if (wordSet.contains(word)) {
            "Word found in the dictionary!"
        } else {
            "Word not found in the dictionary."
        }
    }

    override fun size(): Int {
        return wordSet.size
    }
}
